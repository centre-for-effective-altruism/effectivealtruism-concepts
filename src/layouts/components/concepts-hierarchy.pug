mixin buildConceptTree(concept, depth, maxDepth)
  if concept
    - var childrenToShow = concept.children && concept.children.length && (maxDepth === 0 || depth < maxDepth) && depth < 100
    li.concepts-hierarchy-concept(class=[
      (depth===1 ? 'concepts-hierarcy-concept-apex-concept' : ''),
      (childrenToShow ? 'has-children' : ''),
      (path && path === concept.path ? 'current-concept' : '')
    ])
      if childrenToShow
        a.concepts-hierarchy-concept-toggle-children(href="#")
          i.fa.fa-plus
          i.fa.fa-minus
      i.fa.fa-file-text
      |  
      a.concepts-hierarchy-concept-name(href=concept.path)!= concept.title
      if childrenToShow
        |  
        span.child-concept-count (#{concept.children.length})
        ul.concepts-list(class=`concepts-hierarchy-list-depth-${depth+1}`)
          each childConcept in concept.children
            +buildConceptTree(childConcept, depth+1, maxDepth)

mixin conceptsHierarchy(maxDepth)
  - maxDepth = maxDepth || 0
  if concepts
    ul.concepts-hierarchy-list.concepts-hierarchy-list-depth-1
      each concept in concepts
        if !concept.parent
          +buildConceptTree(concept, 1, maxDepth)

mixin relatedConceptsHierarchy()
  ul.concepts-hierarchy-list.concepts-hierarchy-list-depth-1.related-concepts-hierarchy-list
    if parent
      - var parentFile = contentfulIDMap[parent.sys.id]
      +buildConceptTree(parentFile, 1, 3)
    else
      - var thisFile = contentfulIDMap[id]
      +buildConceptTree(thisFile, 1, 2)